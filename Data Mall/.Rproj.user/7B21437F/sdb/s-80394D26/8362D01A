{
    "collab_server" : "",
    "contents" : "library(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(forecast)\nsource(\"Codigo/funciones.R\")\noptions(scipen = 9999999)\n\n\n##SINTOMA##########\nload(\"dataGuardada/baseConsolidada.RData\")\nactivo = base %>% select(INT_PUNTO, SINTOMA) %>% distinct(.keep_all = T)\nactivo$SINTOMA = as.character(activo$SINTOMA)\nactivo = activo %>% mutate(SINTOMA=if_else(grepl('EN REVISI',SINTOMA), \"REVISION\", SINTOMA))\nactivo = activo %>% mutate(SINTOMA = if_else(SINTOMA == \"BAJA\", 0,1))\nbase = base %>% select(-c(SINTOMA))\n\n\nload(\"dataGuardada/baseConsolidada.RData\")\ndataGeneral = base\n##Analisis por Hora Consistencia\nbase = dataGeneral %>% select(INT_ESTADO, INT_PUNTO, OPERACION, FECHA, HORA, TIEMPO)\n\nbase = base %>% group_by(INT_PUNTO) %>% arrange(TIEMPO) %>% ungroup() %>% as.data.frame()\nbase = base %>% select(-c(INT_ESTADO)) %>% distinct(.keep_all = T)\n\n################################NUMERO ACTUALIZACIONES DIARIAS############################\ntemp = base %>% select(OPERACION) %>% unique() %>% mutate(Numero = 1:n())\nbase = base %>% left_join(temp, by = c(\"OPERACION\")) %>% rename(NUMERO_OPERACION = Numero)\nbase = base %>% filter(OPERACION == \"ACTUALIZACION\")\nbase = base %>% group_by(INT_PUNTO, FECHA) %>% summarise(TOTAL = n()) %>% ungroup() %>% as.data.frame()\n\nnames(base) = c(\"int_punto\",\"fecha\",\"total\")\n\nbase = base %>% group_by(int_punto) %>% mutate(fecha2 = lag(fecha)) %>% ungroup()\nbase = base %>% mutate(Resta = as.Date(fecha)-as.Date(fecha2))\nbase = base %>% mutate(Resta = as.numeric(Resta))\nbase = base %>% as.data.frame()\n\nmasDias = base %>% filter(Resta > 1)\nactDiarias = base\n\n#############################INDICADOR ACTUALIZACION############################################\n\n##Analisis por Hora Consistencia\nbase = dataGeneral %>% select(INT_ESTADO, INT_PUNTO, OPERACION, FECHA, HORA, TIEMPO)\n\nbase = base %>% group_by(INT_PUNTO) %>% arrange(TIEMPO) %>% ungroup() %>% as.data.frame()\nbase = base %>% select(-c(INT_ESTADO)) %>% distinct(.keep_all = T)\n\nbase = base %>% select(-c(OPERACION))\nbase = base %>% rename(TOTAL = HORA)\nbase = base %>% mutate(HORA = strftime(as.POSIXlt(TOTAL, format = \"%H:%M:%S\"), format = \"%H\"))\nbase = base %>% select(INT_PUNTO, TIEMPO, HORA)\nbase = base %>% mutate(TIEMPO = strftime(as.POSIXlt(TIEMPO, format = \"%Y-%m-%d %H:%M:%S\"), format = \"%Y-%m-%d %H:00:00\"))\nbase = base %>% distinct(.keep_all = T)\nbase = base %>% semi_join(activo %>% filter(SINTOMA == 1), by = c(\"INT_PUNTO\"))\n\nlistaPuntos = unique(base$INT_PUNTO)\n\npunto = 276\npopularLineal = data.frame()\npopularArima = data.frame()\ncont = 1\n\nbase = base %>% filter(TIEMPO >= as.POSIXlt(\"2018-04-19 00:00:00\", format = \"%Y-%m-%d %H:%M:%S\"))\nfor (punto in listaPuntos){\n  print(paste0(punto,\"    \", cont,\" de \", length(listaPuntos)))\n  cont = cont+1\n  temp = base %>% filter(INT_PUNTO == punto)\n  minFecha = min(temp$TIEMPO)\n  maxFecha = max(temp$TIEMPO)\n  \n  minFecha = strftime(as.POSIXlt(minFecha, format = \"%Y-%m-%d %H:%M:%S\"), format = \"%Y-%m-%d %H:00:00\")\n  maxFecha = strftime(as.POSIXlt(maxFecha, format = \"%Y-%m-%d %H:%M:%S\"), format = \"%Y-%m-%d %H:00:00\")\n  if (nrow(temp)>0){\n    secuencia = seq(from = as.POSIXlt(minFecha), to = as.POSIXlt(maxFecha), by = \"hour\") %>% as.data.frame()\n    names(secuencia) = c(\"TIEMPO\")\n    secuencia$TIEMPO = as.character(secuencia$TIEMPO)\n    temp = secuencia %>% left_join(temp, by = c(\"TIEMPO\"))\n    temp = temp %>% mutate(HORA = strftime(as.POSIXlt(TIEMPO, format = \"%Y-%m-%d %H:%M:%S\"), format = \"%H\"))\n    temp = temp %>% mutate(CON = if_else(is.na(INT_PUNTO), 0, 1))\n    temp = temp %>% mutate(INT_PUNTO = punto) %>% mutate(Numero = 1:n())\n    graf = ggplot(data = temp, mapping = aes(x = Numero, y = CON))+geom_line(color = \"blue\", mapping = aes(group = \"identity\"))+theme_classic()+\n      xlab('Fecha')+ylab('Conexion')+theme(axis.text.x = element_text(angle = 90))\n    ggsave(filename = paste0(\"Grafica/\",punto,\".png\"), plot = graf, width = 10, height = 7)\n  }\n \n  \n  'testSeaso = testSeasonal(temp)\n  if (testSeaso < 0.05){\n    pred = prediccionLineal(temp, punto, 12) %>% as.data.frame()\n    names(pred) = c(\"valor\")\n    pred = pred %>% mutate(Punto = punto, filas = nrow(temp), test = 1)\n    popularLineal = popularLineal %>% plyr::rbind.fill(pred)\n    \n    pred = prediccionArima(temp, punto) %>% as.data.frame()\n    names(pred) = c(\"valor\")\n    pred = pred %>% mutate(Punto = punto, filas = nrow(temp), test = 1)\n    popularArima = popularArima %>% plyr::rbind.fill(pred)\n  }else{\n    pred = 0 %>% as.data.frame()\n    names(pred) = c(\"valor\")\n    pred = pred %>% mutate(Punto = punto, filas = nrow(temp), test = 0)\n    popularLineal = popularLineal %>% plyr::rbind.fill(pred)\n    \n    pred = 0 %>% as.data.frame()\n    names(pred) = c(\"valor\")\n    pred = pred %>% mutate(Punto = punto, filas = nrow(temp), test = 0)\n    popularArima = popularArima %>% plyr::rbind.fill(pred)\n  }'\n  \n  \n  \n}\n\npopularLineal = popularLineal %>% mutate(Porce = (valor/(filas*0.06) %>% as.integer())*100)\npopularArima = popularArima %>% mutate(Porce = (valor/(filas*0.06) %>% as.integer())*100)\n\nprint(popularLineal)\nprint(popularArima)\n\nwrite.csv(popularArima, file = \"resultados_preliminares.csv\", row.names = F)\n",
    "created" : 1524667021507.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2684518598",
    "id" : "8362D01A",
    "lastKnownWriteTime" : 1524701435,
    "last_content_update" : 1524701435358,
    "path" : "C:/Users/Marcelo/Desktop/Data Mall/Codigo/preAnalisis.R",
    "project_path" : "Codigo/preAnalisis.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}